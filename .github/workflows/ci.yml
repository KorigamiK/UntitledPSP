# on changes to the changelog, or any pull request
name: Continuous Integration
on:
  push:
    paths:
      - 'CHANGELOG.md'
  pull_request:
    paths:
      - 'CHANGELOG.md'
jobs:
  PSP:
   runs-on: ubuntu-latest
   container: pspdev/pspdev:latest
   steps:
     - name: Install dependencies
       run: apk add cmake git zip
     - name: Checkout
       uses: actions/checkout@v2

     - name: Build
       run: ./build_psp.sh --dist
  
     - name: Extract tag name
       id: tag
       run: echo ::set-output name=VERSION::$(tail -n1 CHANGELOG.md | head -n1)

     - name: Upload artifact
       uses: actions/upload-artifact@v2
       with:
          name: untitled-psp
          path: build/psp/dist

  Linux:
    runs-on: ubuntu-latest
    steps:
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y wget cmake libsdl2-dev libsdl2-image-dev libsdl2-mixer-dev libsdl2-ttf-dev libsdl2-gfx-dev libjsoncpp-dev
  
      - name: Checkout
        uses: actions/checkout@v2
  
      - name: Compile
        run: |
          mkdir build
          cd build
          cmake -DCI=ON ..
          cmake --build . --config Release -j 4 
          mkdir dist
          cp untitled_exe dist/
          cd dist
          wget https://github.com/linuxdeploy/linuxdeploy/releases/download/continuous/linuxdeploy-x86_64.AppImage
          chmod +x linuxdeploy*.AppImage
          ./linuxdeploy-x86_64.AppImage --appdir . --output appimage

      - name: Publish artifacts
        uses: actions/upload-artifact@v2
        with:
          name: untitled-linux
          path: |
            build/dist/untitled*.AppImage
            LICENSE
            README.md
            CHANGELOG.md

      - name: Pack
        working-directory: dist
        run: tar -cvf untitled-linux.tar.gz ../src/untitled
      - name: Upload as artifact
        uses: actions/upload-artifact@v2
        with:
          name: untitled
          path: dist/untitled-linux.tar.gz


  Windows:
    if: ${{ false }}  # disable for now
    runs-on: windows-latest
    defaults:
      run:
        shell: msys2 {0}
    steps:
      - name: Install dependencies
        uses: msys2/setup-msys2@v2
        with:
          msystem: MINGW64
          install: >-
            mingw-w64-x86_64-gcc
            mingw-w64-x86_64-binutils
            mingw-w64-x86_64-make
            mingw-w64-x86_64-cmake
            mingw-w64-x86_64-pkgconf
            mingw-w64-x86_64-SDL2
            mingw-w64-x86_64-SDL2_ttf
            mingw-w64-x86_64-SDL2_mixer
            mingw-w64-x86_64-SDL2_image
            mingw-w64-x86_64-SDL2_gfx
            mingw-w64-x86_64-jsoncpp
          update: true
      - name: Checkout
        uses: actions/checkout@v2

      - name: Build
        run : |
          cmake -DCMAKE_BUILD_TYPE=Release -G "MinGW Makefiles" -B build .
          cmake --build build
          cp README.md build
          cp LICENSE build
          cp CHANGELOG.md build
          cp -r res build
          strip --strip-unneeded build/untitled_exe.exe

      - name: Publish artifacts
        uses: actions/upload-artifact@v2
        with:
          name: untitled-windows
          path: |
            build/untitled_exe.exe
            build/res
            build/LICENSE
            build/README.md
            build/CHANGELOG.md

  Release:
    needs: [PSP, Linux]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        build: [psp, linux]


    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Extract tag name
        id: tag
        run: echo ::set-output name=VERSION::$(tail -n1 CHANGELOG.md | head -n1)

      - uses: actions/download-artifact@v2
      - name: Zip artifacts
        run: |
         zip -r untitled-${{matrix.build}}.zip untitled-${{matrix.build}}

      - name: Create release
        uses: softprops/action-gh-release@v1
        with:
         files: |
           untitled-${{matrix.build}}.zip
         body: |
          This is an automated release of the latest version of UNTITLED-PSP.
         prerelease: true
         tag_name: ${{ steps.tag.outputs.VERSION }}
         name: Untitled ${{ steps.tag.outputs.VERSION }}
        env:
         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

